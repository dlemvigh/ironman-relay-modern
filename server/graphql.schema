type Activity implements Node {
  _id: ID

  """The ID of an object"""
  id: ID!
  userId: ID
  distance: Float
  disciplineId: ID
  score: Float
  week: Int
  date: String
}

type Discipline implements Node {
  _id: ID

  """The ID of an object"""
  id: ID!
  name: String
  displayName: String
  score: Float
  unit: String
  order: Int
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type Query {
  activities: [Activity]
  disciplines: [Discipline]
  seasons: [Season]
  user(id: String!): User
  users: [User]

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Season implements Node {
  _id: ID

  """The ID of an object"""
  id: ID!
  name: String
  displayName: String
  from: Int
  to: Int
}

type User implements Node {
  _id: ID

  """The ID of an object"""
  id: ID!
  name: String
  displayName: String
  active: Boolean
}
